#include "defs.h"

/****************************************************************************/
			mknumber(str, maxlen, value)
/*              Преобразование значения value к выводу в строке str
		размером len. При невозможности поместить, преобразуется
		к Kb, Mb, Gb. Отделяются тысячи.
*****************************************************************************/
	char    *str;
	int     maxlen;
	dev_data value;
{
	int     len;
	int     ndevs;  /* количество разделителей тысяч*/
	dev_data tmpval;
/*==========================================================================*/
if( (ulong) value == (ulong) -1)
  {
    strncpy(str,"Unknown", maxlen);
    str[maxlen-1]='\0';
  }else{
    for(ndevs=0, tmpval=value; tmpval>=1000; ndevs++) tmpval/=1024;

    /* Подсчет длины строки, занимаемой числами*/
    sprintf(str,"%lu", (ulong) value);
    len=strlen(str);

    if(len+ndevs <= maxlen)
      { /* размер пишем в байтах*/
	decimals(str, (ulong) value);
      }else{
	value /= 1024;
	sprintf(str,"%lu", (ulong) value);
	len=strlen(str);
	/* ndevs-- - не делаю т.к. добавляется K */

	if(len+ndevs <= maxlen)
	  {
	    decimals(str, (ulong) value);
	    strcat(str, "K");
	  }else{
	    value /= 1024;
	    sprintf(str,"%lu", (ulong) value);
	    len=strlen(str);
	    ndevs--;

	    if(len+ndevs <= maxlen)
	      {
		decimals(str, (ulong) value);
		strcat(str, "M");
	      }else{
		value /= 1024;
		sprintf(str,"%lu", (ulong) value);
		len=strlen(str);
		ndevs--;

		if(len+ndevs <= maxlen)
		  {
		    decimals(str, (ulong) value);
		    strcat(str, "G");
		  }else{
		    strcpy(str, "?");
		  }
	      }
	  }
      }
  }
}
